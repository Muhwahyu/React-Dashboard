[{"E:\\Taimoor\\internSpark\\dashboard\\src\\index.js":"1","E:\\Taimoor\\internSpark\\dashboard\\src\\App.js":"2","E:\\Taimoor\\internSpark\\dashboard\\src\\chromaticColors.js":"3","E:\\Taimoor\\internSpark\\dashboard\\src\\chartData.js":"4","E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\index.js":"5","E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\DoughnutChart.js":"6","E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\BarChart.js":"7","E:\\Taimoor\\internSpark\\dashboard\\src\\API.js":"8"},{"size":222,"mtime":1608523645393,"results":"9","hashOfConfig":"10"},{"size":3600,"mtime":1608526980335,"results":"11","hashOfConfig":"10"},{"size":786,"mtime":1608409832190,"results":"12","hashOfConfig":"10"},{"size":666,"mtime":1608479214634,"results":"13","hashOfConfig":"10"},{"size":112,"mtime":1608467472507,"results":"14","hashOfConfig":"10"},{"size":338,"mtime":1608469186866,"results":"15","hashOfConfig":"10"},{"size":313,"mtime":1608468883052,"results":"16","hashOfConfig":"10"},{"size":1153,"mtime":1608526444815,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1el8zgt",{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"E:\\Taimoor\\internSpark\\dashboard\\src\\index.js",[],["38","39"],"E:\\Taimoor\\internSpark\\dashboard\\src\\App.js",["40","41","42","43","44"],"import { useEffect, useState } from \"react\";\nimport { chartData } from \"./chartData\";\nimport * as d3 from \"d3-scale-chromatic\";\n\nimport { BarChart, DoughnutChart } from \"./Charts\";\nimport { fetchData } from \"./API\";\n\nimport styles from \"./App.module.css\";\n// import { interpolateBlues } from \"d3-scale-chromatic\";\n\nconst App = () => {\n  // <--------------- Data Section --------------->\n\n  const [data, setData] = useState({\n    items: [],\n    DropDownList: [],\n    organicSource: null,\n    directSource: null,\n    referralSource: null,\n    selectedValue: \"Jan 2018\",\n  });\n\n  useEffect(() => {\n    const config = {\n      apiKey: \"AIzaSyDMu-Vw30ykPPmFT3cXeunzKEi4EahzglI\",\n      spreadsheetId: \"1vcDPrMexD8bxNwwzK9IxF8wch6Hfezq2eooJACDiqgg\",\n    };\n    const url = `https://sheets.googleapis.com/v4/spreadsheets/${config.spreadsheetId}/values:batchGet?ranges=Sheet1&majorDimension=ROWS&key=${config.apiKey}`;\n\n    const rows = [];\n    let dropDownList = [];\n    // {month, organic sourc, direct source, referral source, email source}\n    fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        //   console.log(data.valueRanges[0].values);\n        let batchRowValues = data.valueRanges[0].values;\n\n        for (let i = 1; i < batchRowValues.length; i++) {\n          let rowObject = {};\n          for (let j = 0; j < batchRowValues[i].length; j++) {\n            rowObject[batchRowValues[0][j]] = batchRowValues[i][j];\n          }\n          rows.push(rowObject);\n        }\n\n        //dropdonw list\n        rows.map((arr) => dropDownList.push(arr.month));\n        //   dropDownList = Array.from(new Set(dropDownList)).reverse();\n\n        if (rows.length && dropDownList.length) {\n          setData({\n            ...data,\n            items: rows,\n            DropDownList: dropDownList,\n          });\n        }\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  // const getData = (arg) => {\n  //   if ((rows || dropDownList) && arg === state.selectedValue) {\n  //     setState(() => ({\n  //       ...state,\n  //       items: rows,\n  //       dropDownList,\n  //     }));\n  //   }\n  // };\n\n  // const updateDashboard = () => {\n  //   getData();\n  // };\n  // const dataforD = chartData({\n  //   labels: [\"China\", \"UAE\", \"Yemen\", \"Pakistan\", \"Saudia\"],\n  //   data: [120, 390, 500, 205, 122],\n  //   colorRangeInfo: {\n  //     colorStart: 0.25,\n  //     colorEnd: 0.75,\n  //     useEndAsStart: true,\n  //   },\n  //   scale: d3.interpolateCool,\n  //   dataLabel: \"data for doughnut chart\",\n  // });\n\n  // const dataforB = chartData({\n  //   labels: state.dropDownList,\n  //   data: state.items[0],\n  //   colorRangeInfo: {\n  //     colorStart: 0,\n  //     colorEnd: 1,\n  //     useEndAsStart: true,\n  //   },\n  //   scale: d3.interpolateCool,\n  //   dataLabel: \"data for doughnut chart\",\n  // });\n  // console.log(state.dropDownList);\n\n  // <--------------- components here --------------->\n  return (\n    <div className={styles.App}>\n      <h1>Welcome to my dashboard</h1>\n      <select>\n        {data.DropDownList.map((value, index) => (\n          <option key={index + 1} value={value}>\n            {value}\n          </option>\n        ))}\n      </select>\n\n      {/* <--------------- Widgets ---------------> */}\n      <div className={styles.numbers}>something here</div>\n\n      {/* <--------------- Charts ---------------> */}\n      <div className={styles.chart}>\n        {/* <BarChart data={dataforB} width={100} height={50} /> */}\n        {/* <DoughnutChart data={dataforD} width={100} height={50} /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","E:\\Taimoor\\internSpark\\dashboard\\src\\chromaticColors.js",[],"E:\\Taimoor\\internSpark\\dashboard\\src\\chartData.js",["45"],"import * as d3 from \"d3-scale-chromatic\";\r\nimport interpolateColors from \"./chromaticColors\";\r\n\r\nexport const chartData = (chartConfig) => {\r\n  const { labels, data, colorRangeInfo, scale, dataLabel } = chartConfig;\r\n\r\n  // chromatic color data\r\n  const dataLenght = labels.length;\r\n\r\n  // sets d3 interpolate color range\r\n  const colorScale = scale;\r\n\r\n  const randomColor = interpolateColors(dataLenght, colorScale, colorRangeInfo);\r\n\r\n  return {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        label: dataLabel,\r\n        data,\r\n        backgroundColor: randomColor,\r\n        borderColor: randomColor,\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n};\r\n","E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\index.js",[],"E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\DoughnutChart.js",[],"E:\\Taimoor\\internSpark\\dashboard\\src\\Charts\\BarChart.js",[],["46","47"],"E:\\Taimoor\\internSpark\\dashboard\\src\\API.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":3,"column":13,"nodeType":"54","messageId":"55","endLine":3,"endColumn":15},{"ruleId":"52","severity":1,"message":"57","line":5,"column":10,"nodeType":"54","messageId":"55","endLine":5,"endColumn":18},{"ruleId":"52","severity":1,"message":"58","line":5,"column":20,"nodeType":"54","messageId":"55","endLine":5,"endColumn":33},{"ruleId":"52","severity":1,"message":"59","line":6,"column":10,"nodeType":"54","messageId":"55","endLine":6,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":1,"column":13,"nodeType":"54","messageId":"55","endLine":1,"endColumn":15},{"ruleId":"48","replacedBy":"60"},{"ruleId":"50","replacedBy":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'chartData' is defined but never used.","Identifier","unusedVar","'d3' is defined but never used.","'BarChart' is defined but never used.","'DoughnutChart' is defined but never used.","'fetchData' is defined but never used.",["62"],["63"],"no-global-assign","no-unsafe-negation"]